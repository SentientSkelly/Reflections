1-5 It allowed seeing differences between the two versions, one of which is assumed to work, and comparing it to the one that doesn't work, to see what has caused the one that doesn't work to not work.
1-8 Having access to the entire history at any given time will save time when trying to figure out what went wrong when something does go wrong without trying to read through all of the code manually and see what is and isn't working.
1-15 When creating a commit manually, it allows the user to make it at a sensible (for them) stopping point where the code is (assumingly) in a complete enough form for the user to look back at it and see logical incriments of change within the code, as opposed to google docs making a commit in the middle of writing a line of code whether the user is done or not. A major con to manually creating commits, however, is that the user might forget to create commits and leave large gaps between changes in the code.
1-18 This is probably only because some people prefer to have the files all together when working on a larger project and want to look at them all together, whereas if one has a smaller project or the project is large enough to be a standalone subject, separate files would be helpful to the user.
1-22 You use the git log to see what versions are different and git diff to see the differences between said versions.
1-26 It makes one more confident because it won't permenantly ruin the project that is being worked on if a major error is made, only one specific commit of it.
1-31 I have no idea what I want to try using Git for, I am simply following the lessons and doing what they ask.
